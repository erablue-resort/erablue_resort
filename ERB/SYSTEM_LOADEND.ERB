

;-------------------------------------------------------------------------------------------
;ロードの後に実行される一連の処理
;主にキャラのCSVが前回プレイから新たに増えた時など
;-------------------------------------------------------------------------------------------

@SYSTEM_LOADEND
#DIM 部屋セットチェック
#DIM 追加キャラ保存, 100
#DIM 互換維持用変数, 100
#DIMS 弱点一時保存, 50
#DIM 同行配列番号
#DIM L_C
#DIM F_NUM

#DIMS 比較用一時保存配列, 1000
#DIMS 素材名分割用, 2
#DIMS 同行キャラ文字列一時保存
#DIMS CSTR切り分け文字列格納, 2
VARSET 比較用一時保存配列
VARSET 同時モード_選択キャラ, -1

VARSET 追加キャラ保存
LOCAL:1 = 0

ダンジョン表示モード = 

;CSVを全部読んでキャラがADDってなければADDる
FOR LOCAL, 1, キャラクタ数上限
	SIF !EXISTCSV(LOCAL)
		CONTINUE
	SIF LOCAL == 999
		CONTINUE
	SIF GETCHARA(LOCAL) >= 0
		CONTINUE
	追加キャラ保存:(LOCAL:1) = CHARANUM
	ADDCHARA LOCAL
	CALL ADD_PERSON_FROM_CHARA(追加キャラ保存:(LOCAL:1))
	LOCAL:1 += 1
NEXT

SIF LOCAL:1
	CALL コマンド存在チェック

FOR LOCAL, 0, LOCAL:1
	CALL キャラクター初期化(追加キャラ保存:LOCAL)
NEXT

;ロード時処理
FOR LOCAL, 0, CHARANUM
	TRYCALLFORM 口上側LOADENDパラメータ変更_{NO:LOCAL}
	SIF !BASE:LOCAL:身長
		CALL INIT_BODYSIZE(LOCAL)
	IF !RELATION_VAL:0:0 && FINDELEMENT(追加キャラ保存, LOCAL) < 0
		CALL INIT_RELATION(LOCAL)
	ENDIF

	;追加同行キャラチェック
	同行キャラ文字列一時保存 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "同行キャラ"))%
	VARSET LOCALS
	REPLACE 同行キャラ文字列一時保存, " ", ""
	SPLIT RESULTS, "%", LOCALS
	LOCAL:2 = RESULT - 1
	FOR LOCAL:10, 0, LOCAL:2
		VARSET CSTR切り分け文字列格納
		SPLIT LOCALS:(LOCAL:10), "_", CSTR切り分け文字列格納
		CALL SET_RELATION(LOCAL, FINDCHARA(NAME, CSTR切り分け文字列格納:0), TOINT(CSTR切り分け文字列格納:1))
	NEXT

	;固有ステータスチェック
	IF EXISTFUNCTION(@"戦闘初期ステータス設定_{NO:LOCAL}")
		;固有ステがあるのにステタイプが汎用なら修正
		IF 基礎BATTLE_STATE:LOCAL:ステータスタイプ保存 > -1
			CALLFORM 戦闘初期ステータス設定_{NO:LOCAL}(LOCAL)
			CALL レベルアップ処理(LOCAL)
			CALL 口上変数初期化
		ENDIF
	ENDIF

	;固有素質変更対応
	;今後固有素質変更イベが来た場合消すこと
	CSTR:LOCAL:固有素質0 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質0"))%
	CSTR:LOCAL:固有素質1 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質1"))%
	CSTR:LOCAL:固有素質2 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質2"))%
	CSTR:LOCAL:固有素質3 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質3"))%
	CSTR:LOCAL:固有素質4 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質4"))%
	CSTR:LOCAL:固有素質5 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質5"))%
	CSTR:LOCAL:固有素質6 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質6"))%
	CSTR:LOCAL:固有素質7 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質7"))%
	CSTR:LOCAL:固有素質8 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質8"))%
	CSTR:LOCAL:固有素質9 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "固有素質9"))%

	MAXBASE:LOCAL:警戒 = 1001
NEXT

SIF !RELATION_VAL:0:0
	RELATION_VAL:0:0 = 1
CALL 戦闘用データベースセット
CALL 従業員業務用マップセット
CALL 体位モードデータベースセット

ボタン化用カラーマトリクス:0:0 = 768,256,256,  0,  0
ボタン化用カラーマトリクス:1:0 = 256,768,256,  0,  0
ボタン化用カラーマトリクス:2:0 = 256,256,256,  0,  0
ボタン化用カラーマトリクス:3:0 =   0,  0,  0,256,  0
ボタン化用カラーマトリクス:4:0 =   0,  0,  0,  0,256

;初期所持服登録
LOCAL:1 = ENUMFUNCBEGINSWITH("CLOTHES_初期所持関数_")
IF LOCAL:1 > 0
	FOR LOCAL, 0, LOCAL:1
		CALLFORM %RESULTS:LOCAL%
	NEXT
ENDIF

;------------------------------------------------------------------------------------------
;旧セーブとの互換のために入れる処理
;------------------------------------------------------------------------------------------

;追加TALENT、追加CSTRのチェック
FOR LOCAL, 1, CHARANUM
	;↓ここから0.040での変更↓
	;↑ここまで0.043にしたとき消す、互換を41に↑

	;↓ここから0.041での変更↓
	IF TALENT:LOCAL:性別嗜好 == -1
		TALENT:LOCAL:性別嗜好 = 0
		TALENT:LOCAL:性愛傾向 = 3
	ENDIF
	;↑ここまで0.044にしたとき消す、互換を42に↑

	;↓ここから0.042での変更↓
	;↑ここまで0.045にしたとき消す、互換を43に↑

	;↓ここから0.043での変更↓
	;↑ここまで0.046にしたとき消す、互換を44に↑
NEXT

;↓ここから0.040での変更↓

IF ZPキャラ無料フォロー == 0
	ZPキャラ無料回数 = 3
	ZPキャラ無料フォロー = 1
ENDIF

IF 乗機追加フォロー == 0
	LOCAL:1 = 0
	FOR LOCAL, 0, DT_ROW_LENGTH("所持兵器データベース")
		IF DT_CELL_GETS("所持兵器データベース", LOCAL, "兵器名") == "10mmバルカン砲" && DT_CELL_GET("所持兵器データベース", LOCAL, "設計状態フラグ")
			LOCAL:1 = 1
			BREAK
		ENDIF
	NEXT

	IF 港改造度:11:0 > 0
		CALL 乗機取得処理_設計図("サイドカー付ケッタギア")
		CALL 乗機取得処理_設計図("バトルトラクター")
		CALL 汎用搭載兵器取得処理_設計図("ダウジングパーツ")
		CALL 汎用搭載兵器取得処理_設計図("近接用スピア")
		CALL 汎用搭載兵器取得処理_設計図("9mm機関銃")
		CALL 汎用搭載兵器取得処理_設計図("20mm擲弾砲")
	ENDIF
	IF LOCAL:1 == 1
		CALL 汎用搭載兵器取得処理_設計図("19mm狙撃砲")
		CALL 汎用搭載兵器取得処理_設計図("30mm榴弾砲")
	ENDIF

	乗機追加フォロー = 1
ENDIF


IF メンバーリスト表示フォロー == 0
	メンバーリスト表示欄:1 = 属性
	メンバーリスト表示欄:2 = Ｌｖ
	メンバーリスト表示欄:3 = 固有
	メンバーリスト表示フォロー = 1
ENDIF

;↑ここまで0.043にしたとき消す、互換を41に↑

;↓ここから0.041での変更↓

IF 精力追加フォロー <= 1
	FOR LOCAL, 0, CHARANUM
		CALL 精力ゲージ_初期化(LOCAL)
	NEXT
	精力追加フォロー = 2
ENDIF


;↑ここまで0.044にしたとき消す、互換を42に↑

;↓ここから0.042での変更↓

IF あなた画像フォロー == 0
	CSTR:MASTER:画像フォルダ = 0あなた
	あなた画像フォロー = 1
ENDIF

CALLNAME:(キャラ検索("[撃槍・ガングニール]立花響")) = 立花響
CSTR:(キャラ検索("[撃槍・ガングニール]立花響")):画像フォルダ = 1051立花響

;↑ここまで0.045にしたとき消す、互換を43に↑

;↓ここから0.043での変更↓
;↑ここまで0.046にしたとき消す、互換を44に↑

;------------------------------------------------------------------------------------------
;ここまで互換のための処理
;------------------------------------------------------------------------------------------

CALL コマンド存在チェック()

;あなたの弱点チェック
FOR LOCAL:1, 0, 50
	;今現在設定されてない弱点枠には触らない
	SIF 弱点コマンド枠:MASTER:(LOCAL:1) == ""
		BREAK
	IF EXISTFUNCTION(@"COMTYPE_S_%弱点コマンド枠:MASTER:(LOCAL:1)%")
		SIF 弱点コマンド候補判定(MASTER, @"COMTYPE_S_%弱点コマンド枠:MASTER:(LOCAL:1)%") == 0
			弱点コマンド枠:MASTER:(LOCAL:1) = 
	ELSEIF EXISTFUNCTION(@"COMTYPE_%弱点コマンド枠:MASTER:(LOCAL:1)%")
		SIF 弱点コマンド候補判定(MASTER, @"COMTYPE_%弱点コマンド枠:MASTER:(LOCAL:1)%") == 0
			弱点コマンド枠:MASTER:(LOCAL:1) = 
	ELSE
		弱点コマンド枠:MASTER:(LOCAL:1) = 
	ENDIF
	;上を通って空っぽならランダムに入れ込む
	IF 弱点コマンド枠:MASTER:(LOCAL:1) == ""
		RESULTS = 
		CALL 弱点コマンドランダム選出(MASTER)
		弱点コマンド枠:MASTER:(LOCAL:1) = %RESULTS%
	ENDIF
NEXT

FOR LOCAL, 1, CHARANUM
	;キャラ体力再計算
	CALL 体力変動素質適用処理(LOCAL)

	;弱点コマンドの設定がされているかどうかチェック
	VARSET 弱点一時保存
	IF EXISTFUNCTION(@"弱点コマンド変更_{NO:LOCAL}")
		FOR LOCAL:1, 0, 50
			弱点一時保存:(LOCAL:1) = %弱点コマンド枠:LOCAL:(LOCAL:1)%
		NEXT
		VARSET 弱点コマンド枠:LOCAL:0
		TRYCALLFORM 弱点コマンド変更_{NO:LOCAL}
		FOR LOCAL:1, 0, 50
			IF 弱点コマンド枠:LOCAL:(LOCAL:1) == "-1" || 弱点コマンド枠:LOCAL:(LOCAL:1) == ""
				;口上で指定されてないのを入れ込む場合、有効な弱点かどうか見る
				IF EXISTFUNCTION(@"COMTYPE_S_%弱点一時保存:(LOCAL:1)%")
					SIF 弱点コマンド候補判定(LOCAL, @"COMTYPE_S_%弱点一時保存:(LOCAL:1)%")
						弱点コマンド枠:LOCAL:(LOCAL:1) = %弱点一時保存:(LOCAL:1)%
				ELSEIF EXISTFUNCTION(@"COMTYPE_%弱点一時保存:(LOCAL:1)%")
					SIF 弱点コマンド候補判定(LOCAL, @"COMTYPE_%弱点一時保存:(LOCAL:1)%")
						弱点コマンド枠:LOCAL:(LOCAL:1) = %弱点一時保存:(LOCAL:1)%
				ELSE
					弱点コマンド枠:LOCAL:(LOCAL:1) = 
				ENDIF
				;上を通って空っぽ、あるいはランダム指定ならランダムに入れ込む
				IF 弱点コマンド枠:LOCAL:(LOCAL:1) == "-1" || (弱点コマンド枠:LOCAL:(LOCAL:1) == "" && LOCAL:1 <= 5)
					RESULTS = 
					CALL 弱点コマンドランダム選出(LOCAL)
					弱点コマンド枠:LOCAL:(LOCAL:1) = %RESULTS%
				ENDIF
			ENDIF
		NEXT
	ELSE
		;弱点の口上設定がない場合、有効な弱点かどうかだけ見る
		FOR LOCAL:1, 0, 50
			;今現在設定されてない弱点枠には触らない
			SIF 弱点コマンド枠:LOCAL:(LOCAL:1) == ""
				BREAK
			IF EXISTFUNCTION(@"COMTYPE_S_%弱点コマンド枠:LOCAL:(LOCAL:1)%")
				SIF 弱点コマンド候補判定(LOCAL, @"COMTYPE_S_%弱点コマンド枠:LOCAL:(LOCAL:1)%") == 0
					弱点コマンド枠:LOCAL:(LOCAL:1) = 
			ELSEIF EXISTFUNCTION(@"COMTYPE_%弱点コマンド枠:LOCAL:(LOCAL:1)%")
				SIF 弱点コマンド候補判定(LOCAL, @"COMTYPE_%弱点コマンド枠:LOCAL:(LOCAL:1)%") == 0
					弱点コマンド枠:LOCAL:(LOCAL:1) = 
			ELSE
				弱点コマンド枠:LOCAL:(LOCAL:1) = 
			ENDIF
			;上を通って空っぽならランダムに入れ込む
			IF 弱点コマンド枠:LOCAL:(LOCAL:1) == ""
				RESULTS = 
				CALL 弱点コマンドランダム選出(LOCAL)
				弱点コマンド枠:LOCAL:(LOCAL:1) = %RESULTS%
			ENDIF
		NEXT
	ENDIF

	;画像フォルダが有効かチェック
	CALL 画像フォルダ有効チェック(LOCAL)

	;定住者が帰ってないかチェック
	SIF TALENT:LOCAL:定住者 && CFLAG:LOCAL:滞在期間 != 999
		CFLAG:LOCAL:滞在期間 = 999

	SIF CFLAG:LOCAL:滞在期間 < 0
		CONTINUE
	CALL 部屋なしキャラチェック(LOCAL)

	;複数の部屋に入っちゃってないかチェック
	LOCAL:2 = 0
	IF TALENT:LOCAL:従業員
		FOR LOCAL:1, 0, 従業員部屋数
			IF 従業員部屋割り配列:(LOCAL:1) == LOCAL
				IF LOCAL:2
					従業員部屋割り配列:(LOCAL:1) = 0
				ELSE
					LOCAL:2 = 1
				ENDIF
			ENDIF
		NEXT
	ELSE
		FOR LOCAL:1, 0, 100
			IF 滞在者部屋割り配列:(LOCAL:1) == LOCAL
				IF LOCAL:2
					滞在者部屋割り配列:(LOCAL:1) = 0
				ELSE
					LOCAL:2 = 1
				ENDIF
			ENDIF
		NEXT
	ENDIF
NEXT

;分身が入り込んでないかチェック
FOR LOCAL:1, 0, 従業員部屋数
	IF TALENT:(従業員部屋割り配列:(LOCAL:1)):従業員 < 1
		従業員部屋割り配列:(LOCAL:1) = 0
	ENDIF
	IF 従業員部屋割り配列:(LOCAL:1) >= CHARANUM
		従業員部屋割り配列:(LOCAL:1) = 0
	ENDIF
	IF 滞在者部屋割り配列:(LOCAL:1) >= CHARANUM
		滞在者部屋割り配列:(LOCAL:1) = 0
	ENDIF
NEXT

;ちゃんとPTメンバー全員いるかチェック
FOR LOCAL, 0, 14
	SIF LOCAL > 3 && LOCAL < 10
		CONTINUE
	IF CFLAG:(BATTLE_STATE:LOCAL:0):滞在期間 < 0
		BATTLE_STATE:LOCAL:0 = BATTLE_STATE:(LOCAL + 1):0
		BATTLE_STATE:(LOCAL + 1):0 = BATTLE_STATE:(LOCAL + 2):0
		BATTLE_STATE:(LOCAL + 2):0 = BATTLE_STATE:(LOCAL + 3):0
		BATTLE_STATE:(LOCAL + 3):0 = BATTLE_STATE:(LOCAL + 4):0
	ENDIF
NEXT

CALL イベント追加チェック
CALL イベント削除チェック
IF SAVESTR:ゲームフェイズ管理 == ""
	CALL イベント発生条件チェック
ENDIF

;新しく素材アイテムが増えてないかチェック
CALL 素材アイテム登録処理

;念のため変数リセット
CALL TRAIN_VAR_RESET
CALL TURN_RESET
CALL 最大レベル算出保存

;ログボ処理
LOCAL = GETSECOND() / 3600
;日単位
LOCAL:1 = (LOCAL + 19) / 24

IF (REAL_TIME < LOCAL:1)
	REAL_TIME = LOCAL:1
	CALL ログインボーナス処理
ENDIF
