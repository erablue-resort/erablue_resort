@変身ABLE(キャラ番号, 判定条件)
;変身可否判定関数
#DIMS 判定条件
#DIM キャラ番号

;問い合わせキャラを検索して、対象が変身可能状態かチェックする
;独自の判定の受け口を作っておく
;データベースに登録がある
IF DT_SELECT("変身データベース", @"キャラ番号 = {キャラ番号}")
    CALL GET変身データベース(キャラ番号)
    TRYCCALLFORM 個別変身ABLE_{NO:キャラ番号}
        ;個別ABLEの判定を受けとる
        IF RESULT
            RETURN 1
        ELSE
            RETURN 0
        ENDIF
    CATCH
        ;判定条件で変身可能　かつ　変身していない
        IF STRFINDU(変身配列STR:変身タイミング文字列, 判定条件) >= 0 && !変身配列INT:変身残りターン数
            RETURN 1
        ELSE
            RETURN 0
        ENDIF
    ENDCATCH
ELSE
    ;未登録=変身キャラではない
    RETURN 0
ENDIF

@変身解除ABLE(キャラ番号, 判定条件)
;変身可否判定関数
#DIMS 判定条件
#DIM キャラ番号

;問い合わせキャラを検索して、対象が変身解除可能状態かチェックする
;独自の判定の受け口を作っておく
;データベースに登録がある
IF DT_SELECT("変身データベース", @"キャラ番号 = {キャラ番号}")
    CALL GET変身データベース(キャラ番号)
    TRYCCALLFORM 個別変身解除ABLE_{NO:キャラ番号}
        ;個別ABLEの判定を受けとる
        IF RESULT
            RETURN 1
        ELSE
            RETURN 0
        ENDIF
    CATCH
        ;判定条件で変身可能　かつ　変身していない
        IF STRFINDU(変身配列STR:解除タイミング文字列, 判定条件) >= 0 && 変身配列INT:変身残りターン数 > 0
            RETURN 1
        ELSE
            RETURN 0
        ENDIF
    ENDCATCH
ELSE
    ;未登録=変身キャラではない
    RETURN 0
ENDIF
