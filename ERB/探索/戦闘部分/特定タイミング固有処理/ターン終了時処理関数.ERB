@ターン終了時処理関数
#DIM バフ・デバフ行数
#DIM 生存チェック_味方
#DIM 生存チェック_敵
#DIM 効果番号
生存チェック_味方 = 0
生存チェック_敵 = 0

CALL 口上変数初期化
CALL アビテンプレ変数リセット
;ターン終了時に呼ぶ関数
;自動発動するアビやバフなどの処理を想定

;フィールドを見る
IF 展開中フィールド名格納 != ""
	TRYCALLFORM 固有ターン終了時処理_フィールド_%展開中フィールド名格納%()
	;基本的に表示処理まで全て関数の中でやること
	;（戦闘行動キャラが存在しないのでアビテンプレートは使用しない）
ENDIF

FOR 戦闘行動キャラ, 0, 4
	;味方の処理
	SIF BATTLE_STATE:戦闘行動キャラ:キャラ登録番号 < 1
		CONTINUE

	;指輪を見る
	TRYCCALLFORM 固有ターン終了時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号):装備指輪番号, "指輪名", 1)%()
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;ジョブ証を見る
	TRYCCALLFORM 固有ターン終了時処理_ジョブ証_%DT_CELL_GETS("所持ジョブ証データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号):装備証番号, "ジョブ証名", 1)%()
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;キャラの変身期間消費
	CALL 変身期間消費処理キャラ(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号, "ターン")

	;キャラを見る
	TRYCCALLFORM 固有ターン終了時処理_キャラ_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号)}()
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;バフ・デバフを見る
	FOR 効果番号, 0, DT_ROW_LENGTH("戦闘効果データベース")
		IF バフ・デバフ効果適用判定_行指定(効果番号, "ALL", "ALL", 戦闘行動キャラ)
			IF DT_CELL_GETS("戦闘効果データベース", 効果番号, "バフ・デバフフラグ") == "バフ"
				TRYCCALLFORM 固有ターン終了時処理_バフ_%DT_CELL_GETS("戦闘効果データベース", 効果番号, "効果枠")%(効果番号)
					;表示処理
					CALL アビテンプレート用_表示メッセージ変換処理
					SIF K > 0
						CALL メッセージ欄表示用関数(,,,0)
					CALL 口上変数初期化
					CALL アビテンプレ変数リセット
				CATCH
				ENDCATCH
			ELSEIF DT_CELL_GETS("戦闘効果データベース", 効果番号, "バフ・デバフフラグ") == "デバフ"
				TRYCCALLFORM 固有ターン終了時処理_デバフ_%DT_CELL_GETS("戦闘効果データベース", 効果番号, "効果枠")%(効果番号)
					;表示処理
					CALL アビテンプレート用_表示メッセージ変換処理
					SIF K > 0
						CALL メッセージ欄表示用関数(,,,0)
					CALL 口上変数初期化
					CALL アビテンプレ変数リセット
				CATCH
				ENDCATCH
			ENDIF
		ENDIF
	NEXT
NEXT

FOR 戦闘行動キャラ, 10, 20
	;敵の処理
	SIF 敵BATTLE_STATE_STR:(戦闘行動キャラ - 10):エネミー名 == ""
		CONTINUE

	;エネミーを見る
	TRYCCALLFORM 固有ターン終了時処理_エネミー_%敵BATTLE_STATE_STR:(戦闘行動キャラ - 10):エネミー関数キー%()
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;バフ・デバフを見る
	FOR 効果番号, 0, DT_ROW_LENGTH("戦闘効果データベース")
		IF バフ・デバフ効果適用判定_行指定(効果番号, "ALL", "ALL", 戦闘行動キャラ)
			IF DT_CELL_GETS("戦闘効果データベース", 効果番号, "バフ・デバフフラグ") == "バフ"
				TRYCCALLFORM 固有ターン終了時処理_バフ_%DT_CELL_GETS("戦闘効果データベース", 効果番号, "効果枠")%(効果番号)
					;表示処理
					CALL アビテンプレート用_表示メッセージ変換処理
					SIF K > 0
						CALL メッセージ欄表示用関数(,,,0)
					CALL 口上変数初期化
					CALL アビテンプレ変数リセット
				CATCH
				ENDCATCH
			ELSEIF DT_CELL_GETS("戦闘効果データベース", 効果番号, "バフ・デバフフラグ") == "デバフ"
				TRYCCALLFORM 固有ターン終了時処理_デバフ_%DT_CELL_GETS("戦闘効果データベース", 効果番号, "効果枠")%(効果番号)
					;表示処理
					CALL アビテンプレート用_表示メッセージ変換処理
					SIF K > 0
						CALL メッセージ欄表示用関数(,,,0)
					CALL 口上変数初期化
					CALL アビテンプレ変数リセット
				CATCH
				ENDCATCH
			ENDIF
		ENDIF
	NEXT

NEXT

;全滅チェック
FOR LOCAL, 0, 4
	SIF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
		CONTINUE
	SIF BATTLE_STATE:LOCAL:ＨＰ < 1
		CONTINUE
	生存チェック_味方 = 1
NEXT

IF 生存チェック_味方 == 0
	RETURN 1
ENDIF

FOR LOCAL, 0, 10
	SIF 敵BATTLE_STATE_STR:LOCAL:エネミー名 == ""
		CONTINUE
	SIF 敵BATTLE_STATE:LOCAL:ＨＰ < 1
		CONTINUE
	生存チェック_敵 = 1
NEXT

IF 生存チェック_敵 == 0
	RETURN 1
ENDIF

RETURN 0
