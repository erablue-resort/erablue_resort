
@戦闘勝利時処理
#DIM ループ用
#DIM エネミー数
#DIM 探索口上キャラ番号
#DIM レベルアップフラグ
#DIM ランダム候補, 10

CALL 口上変数初期化
WSTR:(K++) = 戦闘に勝利した！

LOCAL:1 = 0
FOR LOCAL, 0, 14
	SIF LOCAL > 3 && LOCAL < 10
		CONTINUE
	IF BATTLE_STATE:LOCAL:キャラ登録番号 > 0
		ランダム候補:(LOCAL:1) = LOCAL
		LOCAL:1 += 1
	ENDIF
NEXT
探索口上キャラ番号 = BATTLE_STATE:(ランダム候補:(RAND:(LOCAL:1))):キャラ登録番号
TRYCALLFORM KOJO_DUNGEON_戦闘勝利時_{NO:探索口上キャラ番号}(探索口上キャラ番号)

CALL 口上変数初期化
LOCAL:1 = 0
LOCAL:2 = 0
FOR LOCAL, 0, 10
	SIF 敵BATTLE_STATE_STR:LOCAL:エネミー名 == ""
		CONTINUE
	LOCAL:1 += 敵BATTLE_STATE:LOCAL:所持EXP
	LOCAL:2 += 敵BATTLE_STATE:LOCAL:所持ルピ
NEXT
WSTR:(K++) = 経験値を{LOCAL:1, 5} 手に入れた！
レベルアップフラグ = 0
FOR LOCAL, 0, 14
	SIF LOCAL > 3 && LOCAL < 10
		CONTINUE
	SIF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
		CONTINUE
	基礎BATTLE_STATE:(BATTLE_STATE:LOCAL:キャラ登録番号):蓄積EXP += LOCAL:1
	CALL レベルアップ処理(BATTLE_STATE:LOCAL:キャラ登録番号)
	SIF レベルアップフラグ < RESULT
		レベルアップフラグ = RESULT
	CALL 関係性一括上昇_探索(BATTLE_STATE:LOCAL:キャラ登録番号, 5)
NEXT
IF レベルアップフラグ
	;ステータス代入
	CALL 戦闘初期処理_味方
ENDIF

WSTR:(K++) = ルピを{LOCAL:2, 5} 手に入れた！
IF 料理セット判定("カツサンド")
	WSTR:(K++) = カツサンドの効果で更に  500ルピ手に入れた！
	LOCAL:2 += 500
ENDIF
MONEY += LOCAL:2

;ドロップ判定処理
エネミー数 = 0
FOR LOCAL, 0, 10
	SIF 敵BATTLE_STATE_STR:LOCAL:エネミー名 == ""
		CONTINUE

	;エネミー固有ドロップ
	TRYCALLFORM 敵討伐後処理_%敵BATTLE_STATE_STR:LOCAL:エネミー関数キー%(LOCAL + 10)

	エネミー数 += 1
	探索中全体カウント:累計討伐エネミー数 += 1
	IF 敵BATTLE_STATE:LOCAL:ボスフラグ
		;ボスは５匹分
		エネミー数 += 4
	ENDIF
NEXT
;ダンジョン汎用ドロップ
IF ダンジョン名 != ""
	TRYCALLFORM 敵討伐後処理_ダンジョン固有_%ダンジョン名%(エネミー数)
ENDIF

キャラ画像ボタン化フラグ = 1
戦闘行動内容 = 0
CALL メッセージ欄表示用関数(,,,2)
探索中全体カウント:累積勝利数 += 1
CALL 戦闘終了時処理


@全滅時処理
#DIM 探索口上キャラ番号

CALL 口上変数初期化
KSTR:(K++) = 全滅しました……
CALL メッセージ欄表示用関数()

FOR LOCAL, 0, 4
	IF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
		BREAK
	ENDIF
NEXT
FOR LOCAL, 0, 10
	SIF 敵BATTLE_STATE_STR:LOCAL:エネミー名 == ""
		CONTINUE
	IF 敵BATTLE_STATE:LOCAL:ＨＰ < 1
		探索中全体カウント:累計討伐エネミー数 += 1
	ENDIF
NEXT
探索口上キャラ番号 = BATTLE_STATE:(RAND:LOCAL):キャラ登録番号
TRYCALLFORM KOJO_DUNGEON_全滅時_{探索口上キャラ番号}(探索口上キャラ番号)

キャラ画像ボタン化フラグ = 1
戦闘行動内容 = 0
FORCEWAIT
CALL 戦闘終了時処理


@戦闘終了時処理
#DIM 表示兵装数
#DIM 兵装番号

ダンジョン表示モード = マップ画面
サイド描画縦スクロール保存 = 0
CALL 口上変数初期化
VARSET 敵BATTLE_STATE:0:0
VARSET 敵BATTLE_STATE_STR:0:0
アイテム使用済みフラグ = 0
ターン中奥義回数保存 = 0
兵装使用済みフラグ = 0
VARSET チェンバ基準キャラ保存, -1
行動口上呼び出し用文字列 = 
戦闘背景画像 = 
アビテンプレート用_味方全滅フラグ = 0
アビテンプレート用_敵全滅フラグ = 0
展開中フィールド名格納 = 
戦闘時_特殊処理フラグ = 
特殊反応フラグ = 0

戦闘行動キャラ = -1
戦闘行動対象 = -1
戦闘行動内容 = -1
CALL アビテンプレ変数リセット

CBGCLEAR
SETANIMETIMER -1
;画像リソースを全解放して顔グラ再生成
FOR LOCAL, 0, 14
	;顔グラ生成前に変身解除しておく
	CALL 変身解除処理キャラ(BATTLE_STATE:LOCAL:キャラ登録番号, "バトル")
	SIF LOCAL > 3 && LOCAL < 10
		CONTINUE
	SIF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
		CONTINUE
	IF BATTLE_STATE:LOCAL:奥義ゲージ >= 100
		探索中顔グラキー:LOCAL = 奥義ゲージMAX
	ELSE
		探索中顔グラキー:LOCAL = 通常時
	ENDIF
	CALL 探索中顔グラ保存_セット(LOCAL)
NEXT
CALL 探索用顔グラフィック生成
;バフ・デバフリセット
DT_CLEAR "戦闘効果データベース"
FOR LOCAL, 0, 4
	BATTLE_STATE:LOCAL:行動済みフラグ = 0
	FOR LOCAL:1, 0, 20
		探索中カウント:LOCAL:(LOCAL:1) += 戦闘中カウント:LOCAL:(LOCAL:1)
	NEXT
NEXT
VARSET 戦闘中カウント:0:0
VARSET 行動種別フラグ:0:0
探索中全体カウント:累積ターン数 += 現在ターン数
現在ターン数 = 0

;乗機の戦闘中回数、及びCT制のリセット
表示兵装数 = ENUMFUNCBEGINSWITH(@"乗機兵装関数_%DT_CELL_GETS("所持乗機データベース", 装備乗機ID, "乗機名", 1)%_")
FOR LOCAL, 0, 表示兵装数
	兵装番号 = TOINT(REPLACE(RESULTS:LOCAL, @"乗機兵装関数_%DT_CELL_GETS("所持乗機データベース", 装備乗機ID, "乗機名", 1)%_", ""))
	IF 乗機残弾種別:兵装番号 == 2
		;CT制の時は残CTを0にセット
		乗機残弾数:兵装番号 = 0
	ELSEIF 乗機残弾種別:兵装番号 == 0
		;戦闘中制限の場合は残弾セットを呼ぶ
		IF ISNUMERIC(DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{兵装番号}", 1))
			CALLFORM %RESULTS:LOCAL%("残弾セット", TOINT(DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{兵装番号}", 1)))
		ELSE
			CALLFORM %RESULTS:LOCAL%("残弾セット")
		ENDIF
	ENDIF
NEXT

@レベルアップ処理(キャラ番号, 履歴登録しないフラグ = 0)
#DIM キャラ番号
#DIM レベルアップ数
#DIM 計算後レベル
#DIM 判定アビ数
#DIM アビ番号
#DIM 履歴登録しないフラグ
#DIMS アビ名一時保存, 10

;最大レベル時はスキップ
SIF 基礎BATTLE_STATE:キャラ番号:Lv >= 80
	RETURN 0

;テーブルと比較してレベル算出
FOR LOCAL, 0, 80
	IF 戦闘経験値テーブル:LOCAL >= 基礎BATTLE_STATE:キャラ番号:蓄積EXP
		BREAK
	ENDIF
NEXT
計算後レベル = LOCAL

;現在レベルより高ければレベルアップ処理
IF 基礎BATTLE_STATE:キャラ番号:Lv < 計算後レベル
	WNSTR:(K++) = %CALLNAME:キャラ番号%はLvが上がった!!

	;まず現在あるアビを保存してからレベルアップ処理へ
	LOCAL:1 = 0
	VARSET RESULTS
	VARSET アビ関数名保存
	VARSET アビ名一時保存
	判定アビ数 = ENUMFUNCBEGINSWITH(@"固有アビ_{NO:キャラ番号}_")
	IF 判定アビ数
		FOR アビ番号, 0, 判定アビ数
			TSTR:コマンド名受渡 = 
			CALLFORM %RESULTS:アビ番号%("アビ名", キャラ番号)
			IF TSTR:コマンド名受渡 != ""
				アビ関数名保存:(LOCAL:1) = %RESULTS:アビ番号%
				アビ名一時保存:(LOCAL:1) = %TSTR:コマンド名受渡%
				LOCAL:1 += 1
			ENDIF
		NEXT
	ELSE
		VARSET RESULTS
		判定アビ数 = ENUMFUNCBEGINSWITH("汎用固有アビ_")
		FOR アビ番号, 0, 判定アビ数
			TSTR:コマンド名受渡 = 
			CALLFORM %RESULTS:アビ番号%("アビ名", キャラ番号)
			IF TSTR:コマンド名受渡 != ""
				アビ関数名保存:(LOCAL:1) = %RESULTS:アビ番号%
				アビ名一時保存:(LOCAL:1) = %TSTR:コマンド名受渡%
				LOCAL:1 += 1
			ENDIF
		NEXT
	ENDIF

	KSTR:(K++) = Lv{基礎BATTLE_STATE:キャラ番号:Lv} > Lv{計算後レベル}
	レベルアップ数 = 計算後レベル - 基礎BATTLE_STATE:キャラ番号:Lv
	IF 計算後レベル / 10 > 基礎BATTLE_STATE:キャラ番号:Lv / 10
		SIF 履歴登録しないフラグ == 0
			CALL 履歴データベース登録(CFLAG:キャラ番号:人物番号, @"Lv{計算後レベル / 10 * 10}になった","探索")
	ENDIF
	IF 基礎BATTLE_STATE:キャラ番号:ステータスタイプ保存 == -1
		;固有
		TRYCALLFORM 戦闘ステータスレベルアップ設定_{NO:キャラ番号}(キャラ番号, レベルアップ数)
	ELSE
		CALL ステータスレベルアップ設定_テンプレート適用(キャラ番号, レベルアップ数)
	ENDIF
	基礎BATTLE_STATE:キャラ番号:Lv = 計算後レベル
	SIF 最大レベル保存 < 計算後レベル
		最大レベル保存 = 計算後レベル
	
	;レベルアップ後に使えるアビと、保存したアビ配列を比較する
	LOCAL:1 = 0
	VARSET RESULTS
	判定アビ数 = ENUMFUNCBEGINSWITH(@"固有アビ_{NO:キャラ番号}_")
	IF 判定アビ数
		FOR アビ番号, 0, 判定アビ数
			TSTR:コマンド名受渡 = 
			CALLFORM %RESULTS:アビ番号%("アビ名", キャラ番号)
			IF TSTR:コマンド名受渡 != ""
				IF MATCH(アビ関数名保存, RESULTS:アビ番号) == 0
					;使えるけど保存したアビ配列にないアビ＝習得したアビ
					WSTR:(K++) = %CALLNAME:キャラ番号%はアビリティ：%TSTR:コマンド名受渡%を覚えた！
					SIF 履歴登録しないフラグ == 0
						CALL 履歴データベース登録(CFLAG:キャラ番号:人物番号, @"アビリティ：%TSTR:コマンド名受渡%を習得した","探索")
				ELSEIF MATCH(アビ名一時保存, TSTR:コマンド名受渡) == 0
					;以前から使えたけど名前が一致しないアビ＝強化されたアビ
					LOCAL = FINDELEMENT(アビ関数名保存, RESULTS:アビ番号)
					LOCALS = %アビ名一時保存:LOCAL%
					WSTR:(K++) = %CALLNAME:キャラ番号%のアビリティ：%LOCALS%が%TSTR:コマンド名受渡%に強化された！
					SIF 履歴登録しないフラグ == 0
						CALL 履歴データベース登録(CFLAG:キャラ番号:人物番号, @"アビリティ：%LOCALS%が%TSTR:コマンド名受渡%に強化された","探索")
				ENDIF
			ENDIF
		NEXT
	ELSE
		VARSET RESULTS
		判定アビ数 = ENUMFUNCBEGINSWITH("汎用固有アビ_")
		FOR アビ番号, 0, 判定アビ数
			TSTR:コマンド名受渡 = 
			CALLFORM %RESULTS:アビ番号%("アビ名", キャラ番号)
			IF TSTR:コマンド名受渡 != ""
				IF MATCH(アビ関数名保存, RESULTS:アビ番号) == 0
					;使えるけど保存したアビ配列にないアビ＝習得したアビ
					WSTR:(K++) = %CALLNAME:キャラ番号%はアビリティ：%TSTR:コマンド名受渡%を覚えた！
					SIF 履歴登録しないフラグ == 0
						CALL 履歴データベース登録(CFLAG:キャラ番号:人物番号, @"アビリティ：%TSTR:コマンド名受渡%を習得した","探索")
				ELSEIF MATCH(アビ名一時保存, TSTR:コマンド名受渡) == 0
					;以前から使えたけど名前が一致しないアビ＝強化されたアビ
					LOCAL = FINDELEMENT(アビ関数名保存, RESULTS:アビ番号)
					LOCALS = %アビ名一時保存:LOCAL%
					WSTR:(K++) = %CALLNAME:キャラ番号%のアビリティ：%LOCALS%が%TSTR:コマンド名受渡%に強化された！
					SIF 履歴登録しないフラグ == 0
						CALL 履歴データベース登録(CFLAG:キャラ番号:人物番号, @"アビリティ：%LOCALS%が%TSTR:コマンド名受渡%に強化された","探索")
				ENDIF
			ENDIF
		NEXT
	ENDIF

	RETURN レベルアップ数
ENDIF

RETURN  0
